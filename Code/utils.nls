to-report tryRunResult [ code ]
  
  let var ""
  
  carefully
  [
    set var run-result code
  ]
  [
    report error-message
  ]
  
  report var
  
end

to recolor
  
  ask links 
  [
    set thickness 0.05 * abs weight
    
    ifelse show-weights? 
    [ set label precision weight 4 ]
    [ set label "" ]
    
    ifelse weight > 0
    [ set color [ 84 196 196 196 ] ]
    [ set color [ 124 80 164 196 ] ]
  ]
  
end

to-report splitBy [ xs n ]
  
  ifelse ( empty? xs ) 
  [
    report []
  ]
  [
    let el ( take xs n )
    let rest ( skip xs n )
    
    report ( fput el ( splitBy rest n ) )
  ]
  
end

to-report skip [ l n ]
  
  ifelse ( n <= 0 or empty? l )
  [
    report l
  ]
  [
    report skip ( but-first l ) ( n - 1 )
  ]
  
end

to-report take [ l n ]
  
  ifelse ( n <= 0 or empty? l ) 
  [ 
    report []
  ]
  [
    report ( fput first l ( take ( but-first l ) ( n - 1 ) ) )
  ]
  
end

to-report get-dx [ hx l ]
  
  report hx + ( l + 1 ) * hx
  
end

to init-hidden-node [ l hx ]
  
  set color blue
  set layer l
  set xcor ( get-dx hx l )
  set size 2

end

to-report input-activations
  
  report map [ [ activation ] of ? ] sort-on [ who ] input-nodes
  
end

to-report output-activations
  
  report map [ [ activation ] of ? ] sort-on [ who ] output-nodes
  
end